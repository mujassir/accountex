<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountNameisrequired" xml:space="preserve">
    <value>Account Name is required</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="AddEdit" xml:space="preserve">
    <value>Add/Edit</value>
  </data>
  <data name="AddItem" xml:space="preserve">
    <value>Add Item</value>
  </data>
  <data name="AddNew" xml:space="preserve">
    <value>Add New</value>
  </data>
  <data name="AllItemInCurrentVoucher" xml:space="preserve">
    <value>All Item In Current Voucher</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="amountisrequired" xml:space="preserve">
    <value>amount is required</value>
  </data>
  <data name="BillNumber" xml:space="preserve">
    <value>Bill Number</value>
  </data>
  <data name="BillNumberisrequired" xml:space="preserve">
    <value>Bill Number is required</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChartofAccounts" xml:space="preserve">
    <value>Chart of Accounts</value>
  </data>
  <data name="Commission" xml:space="preserve">
    <value>Commission</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Customerisrequired" xml:space="preserve">
    <value>Customer is required</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Expenses" xml:space="preserve">
    <value>Expenses</value>
  </data>
  <data name="Fare" xml:space="preserve">
    <value>Fare</value>
  </data>
  <data name="GrassBikri" xml:space="preserve">
    <value>Grass Bikri</value>
  </data>
  <data name="InvoiceNumber" xml:space="preserve">
    <value>Invoice Number</value>
  </data>
  <data name="item" xml:space="preserve">
    <value>item</value>
  </data>
  <data name="Itemisrequired" xml:space="preserve">
    <value>Item is required</value>
  </data>
  <data name="Labour" xml:space="preserve">
    <value>Labour</value>
  </data>
  <data name="Laga" xml:space="preserve">
    <value>Laga</value>
  </data>
  <data name="ManagePurchase" xml:space="preserve">
    <value>Manage Purchase</value>
  </data>
  <data name="ManageSales" xml:space="preserve">
    <value>Manage Sales</value>
  </data>
  <data name="Mark" xml:space="preserve">
    <value>Mark</value>
  </data>
  <data name="MarkeetFee" xml:space="preserve">
    <value>Markeet Fee</value>
  </data>
  <data name="Misc" xml:space="preserve">
    <value>Misc</value>
  </data>
  <data name="Munshyiana" xml:space="preserve">
    <value>Munshyiana</value>
  </data>
  <data name="NetSale" xml:space="preserve">
    <value>Net Sale</value>
  </data>
  <data name="PendingVoucher" xml:space="preserve">
    <value>Pending Voucher</value>
  </data>
  <data name="Purchase" xml:space="preserve">
    <value>Purchase</value>
  </data>
  <data name="qtyisrequired" xml:space="preserve">
    <value>qty is required</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="QuantityTotal" xml:space="preserve">
    <value>Quantity Total</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Rate</value>
  </data>
  <data name="rateisrequired" xml:space="preserve">
    <value>rate is required</value>
  </data>
  <data name="Sale" xml:space="preserve">
    <value>Sale</value>
  </data>
  <data name="Saledateisrequired" xml:space="preserve">
    <value>Sale date is required</value>
  </data>
  <data name="SaleType" xml:space="preserve">
    <value>Sale Type</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SelectSupplier" xml:space="preserve">
    <value>Select Supplier</value>
  </data>
  <data name="Store" xml:space="preserve">
    <value>Store</value>
  </data>
  <data name="StorePurchase" xml:space="preserve">
    <value>Store Purchase</value>
  </data>
  <data name="Supplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="Supplierisrequired" xml:space="preserve">
    <value>Supplier is required</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalAmount" xml:space="preserve">
    <value>Total Amount</value>
  </data>
  <data name="Vehicle" xml:space="preserve">
    <value>Vehicle</value>
  </data>
  <data name="VehicleNumberisrequired" xml:space="preserve">
    <value>Vehicle Number is required</value>
  </data>
  <data name="Voucherisrequired" xml:space="preserve">
    <value>Voucher is required</value>
  </data>
  <data name="VoucherNumber" xml:space="preserve">
    <value>Voucher Number</value>
  </data>
  <data name="DetailItem" xml:space="preserve">
    <value>DetailItem</value>
  </data>
  <data name="Icon" xml:space="preserve">
    <value>Icon</value>
  </data>
  <data name="LabourStore" xml:space="preserve">
    <value>Labour Store</value>
  </data>
  <data name="PendingVoucherRequired" xml:space="preserve">
    <value>Pending Voucher Required</value>
  </data>
  <data name="Period" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="SelectStorePeriod" xml:space="preserve">
    <value>Select Store Period</value>
  </data>
  <data name="StoreIsRequired" xml:space="preserve">
    <value>Store Is Required</value>
  </data>
  <data name="StoreRent" xml:space="preserve">
    <value>Store Rent</value>
  </data>
  <data name="AccountStructure" xml:space="preserve">
    <value>AccountStructure</value>
  </data>
  <data name="AddAccoun" xml:space="preserve">
    <value>Add Account</value>
  </data>
  <data name="AddParentAccount" xml:space="preserve">
    <value>Add Parent Account</value>
  </data>
  <data name="AddRouteAccount" xml:space="preserve">
    <value>Add Route Account</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Auto" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="CashPayments" xml:space="preserve">
    <value>Cash Payments</value>
  </data>
  <data name="CashReceipts" xml:space="preserve">
    <value>Cash Receipts</value>
  </data>
  <data name="Challan" xml:space="preserve">
    <value>Challan</value>
  </data>
  <data name="Challanisrequired" xml:space="preserve">
    <value>Challan is required</value>
  </data>
  <data name="DetailedLedger" xml:space="preserve">
    <value>Detailed Ledger</value>
  </data>
  <data name="FromAccount" xml:space="preserve">
    <value>From Account</value>
  </data>
  <data name="GeneralLedger" xml:space="preserve">
    <value>General Ledger</value>
  </data>
  <data name="MarkaIsRequired" xml:space="preserve">
    <value>Marka is Required</value>
  </data>
  <data name="Reports" xml:space="preserve">
    <value>reports</value>
  </data>
  <data name="SaleDetail" xml:space="preserve">
    <value>Sale Detail</value>
  </data>
  <data name="SaleLedger" xml:space="preserve">
    <value>Sales Ledger</value>
  </data>
  <data name="SaleSummary" xml:space="preserve">
    <value>Sale Summary</value>
  </data>
  <data name="ToAccount" xml:space="preserve">
    <value>To Account</value>
  </data>
  <data name="Voucher" xml:space="preserve">
    <value>Voucher</value>
  </data>
  <data name="Mezaan" xml:space="preserve">
    <value>Mezaan</value>
  </data>
  <data name="OpeningBalance" xml:space="preserve">
    <value>Opening Balance</value>
  </data>
  <data name="RecoveryForm" xml:space="preserve">
    <value>Recovery Form/Report</value>
  </data>
  <data name="TrialBalance" xml:space="preserve">
    <value>Trial Balance</value>
  </data>
</root>